# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore
from customtkinter import CTk, CTkFrame, CTkLabel
from tkinter import Tk, Canvas, Button, PhotoImage
from pathlib import Path
from tkinter import ttk  # Import ttk for the Treeview widget

cred = credentials.Certificate("serviceAccountKey.json")
firebase_admin.initialize_app(cred)

db = firestore.client()

# Fetch data from Firestore where GRDStatus is 'Approved'
clinics_ref = db.collection('Clinics').where('GRDStatus', '==', 'Approved')
docs = clinics_ref.stream()

# Prepare the data
clinic_data = []
for doc in docs:
    clinic_data.append(doc.to_dict())

# GUI setup using CustomTkinter
root = CTk()
root.title("Clinics with Approved GRDStatus")

frame = CTkFrame(master=root, corner_radius=15, width=600, height=400)
frame.pack(pady=20, padx=20, fill="both", expand=True)

# Display each clinic data
for clinic in clinic_data:
    clinic_info = (
        f"Name: {clinic.get('Name', 'N/A')}\n"
        f"Email: {clinic.get('Email', 'N/A')}\n"
        f"PhoneNo: {clinic.get('PhoneNo', 'N/A')}\n"
        f"Address: {clinic.get('Address', 'N/A')}\n"
        f"GRDStatus: {clinic.get('GRDStatus', 'N/A')}"
    )
    label = CTkLabel(
        master=frame,
        text=clinic_info,
        width=550,
        height=100,
        corner_radius=15,
        fg_color="white",
        text_color="black",
        justify='left'
    )
    label.pack(pady=10, padx=10)

root.mainloop()

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(
    r"C:\INTI homework\Degree  in Computer Scince BCSCUN\Software Engineering\Assignment\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()
window.geometry("1080x664")
window.configure(bg="#FFFFFF")

canvas = Canvas(
    window,
    bg="#FFFFFF",
    height=664,
    width=1080,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)
image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(540.0, 332.0, image=image_image_1)

canvas.create_rectangle(
    81.0,
    0.0,
    1080.0,
    198.0,
    fill="#FFFFFF",
    outline=""
)

canvas.create_rectangle(
    0.0,
    0.0,
    81.0,
    664.0,
    fill="#5271FF",
    outline=""
)

button_image_2 = PhotoImage(file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    activebackground="#5271FF",  # Set to match the button's bg color
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(x=0.0, y=305.0, width=81.0, height=73.0)

button_image_3 = PhotoImage(file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    activebackground="#5271FF",  # Set to match the button's bg color
    command=lambda: print("button_3 clicked"),
    relief="flat"
)
button_3.place(x=1015.0, y=0.0, width=65.0, height=60.0)

image_image_4 = PhotoImage(file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(591.0, 99.0, image=image_image_4)

button_image_4 = PhotoImage(file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    activebackground="#5271FF",  # Set to match the button's bg color
    command=lambda: print("button_4 clicked"),
    relief="flat"
)
button_4.place(x=0.0, y=0.0, width=81.0, height=73.0)

button_image_5 = PhotoImage(file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    activebackground="#5271FF",  # Set to match the button's bg color
    command=lambda: print("button_5 clicked"),
    relief="flat"
)
button_5.place(x=0.0, y=167.0, width=81.0, height=73.0)

# Add single-line table below the image and above button 5
columns = ("Clinic View", "", "Manage booking", "Manage Doctors", "Manage clinic ", "GRDStatus")
tree = ttk.Treeview(window, columns=columns, show='headings', height=1)

# Set column headings
for col in columns:
    tree.heading(col, text=col)
    tree.column(col, width=150, anchor='center')

# Add a single empty row for the toolbar effect
tree.insert("", "end", values=("", "", "", "", ""))

# Place the treeview below the image and above button 5
tree.place(x=0, y=200, width=1080, height=20)

window.resizable(False, False)
window.mainloop()
